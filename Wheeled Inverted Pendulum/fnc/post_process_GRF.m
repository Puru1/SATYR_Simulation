function [DDQ_LOG, TAU_LOG, GRFz_LOG] = post_process_GRF(p,X,T)
    % Global variables
    global K
    
    DDQ_LOG = zeros(length(X),4);
    TAU_LOG = zeros(length(X),3);
    GRFz_LOG = zeros(length(X),1);

    % Local variables
    g = p.g;
    mW = p.valM.mW;
    mCM1 = p.valM.cm1;
    mCM2 = p.valM.cm2;
    mR = p.valM.mR;
    L1 = p.valL.L1; 
    L2 = p.valL.L2;
    L3 = p.valL.L3;
    R = p.R;
    IW = p.IW; %
    IK = p.IK;
    IH = p.IH;
    IR = p.IR;
    theta1_num = p.theta1_num;
    theta2_num = p.theta2_num;
    theta3_num = p.theta3_num;
    
    L = [L1 L2 L3];
    Mass = [mW,mCM1,mCM2,mR];

    % States expanded 
    for i = 1:length(X)
        X_curr = X(i,:)';
        xW = X_curr(1); 
        theta1 = X_curr(2); 
        theta2 = X_curr(3);
        theta3 = X_curr(4);
        dxW = X_curr(5); 
        dtheta1 = X_curr(6); 
        dtheta2 = X_curr(7);
        dtheta3 = X_curr(8);

        q = [xW;theta1;theta2;theta3];
        dq = [dxW;dtheta1;dtheta2;dtheta3];

        % Set reference vectors
        X_ref = [0;theta1_num;theta2_num;theta3_num;0;0;0;0]; % Theta1 given. Found theta2 via COM calculations for stable point.
        tau_ref_10 = [0; -5.13599; -2.74328];

        % Mass and Coriolis+Gravity Matrices 
        M = [[                                                                                                                             mCM1 + mCM2 + mR + mW + 3/(4000*R^2),                                                                                                                                                                                                                                                                                                                mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) + mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + (L1*mCM1*cos(theta1))/2,                                                                                                                                                                                                                                                                                                                                                                              mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + (L2*mCM2*cos(theta1 + theta2))/2,                                                                                                                                                                                                                L3*mR*cos(theta1 + theta2 + theta3)]
        [ mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) + mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + (L1*mCM1*cos(theta1))/2,                                                                                                                mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3))^2 + mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))^2 + mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1))^2 + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))^2 + (L1^2*mCM1*cos(theta1)^2)/4 + (L1^2*mCM1*sin(theta1)^2)/4 + 2683/12500, mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L2*mCM2*cos(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 + 10107/50000, L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000]
        [                                                               mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + (L2*mCM2*cos(theta1 + theta2))/2, mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L2*mCM2*cos(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 + 10107/50000,                                                                                                                                                                                                                                               mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))^2 + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))^2 + (L2^2*mCM2*cos(theta1 + theta2)^2)/4 + (L2^2*mCM2*sin(theta1 + theta2)^2)/4 + 10107/50000,                                   L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000]
        [                                                                                                                              L3*mR*cos(theta1 + theta2 + theta3),                                                                                                                                                                                                                              L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000,                                                                                                                                                                                                                                                                L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000,                                                                                                                                                     mR*L3^2*cos(theta1 + theta2 + theta3)^2 + mR*L3^2*sin(theta1 + theta2 + theta3)^2 + 4933/25000]];

dtheta3*(L3*dtheta1*mR*sin(theta1 + theta2 + theta3) + L3*dtheta2*mR*sin(theta1 + theta2 + theta3) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3)) - dtheta1*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L1*mCM1*sin(theta1))/4) + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3)) - dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3))
                     dxW*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) - dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta2*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) - dtheta2*((dtheta1*(2*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) - L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))))/2 + dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2) + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/4 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/4) + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 - (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 + (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2)) - dtheta1*((dxW*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L1*mCM1*sin(theta1))/4)) - g*mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - g*mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (dtheta1*dxW*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + (dtheta2*dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 - (L1*g*mCM1*sin(theta1))/2 + (L3*dtheta3*dxW*mR*sin(theta1 + theta2 + theta3))/2
         dtheta3*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/4 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/4) + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4)) + dxW*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) + dtheta1*((dtheta1*(2*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) - L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2) + dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2) - dtheta1*((dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4)) - dtheta3*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta2*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) - g*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) - (L2*g*mCM2*sin(theta1 + theta2))/2
dtheta1*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta2*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + (dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) + dxW*((L3*dtheta1*mR*sin(theta1 + theta2 + theta3))/2 + (L3*dtheta2*mR*sin(theta1 + theta2 + theta3))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) + dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta2*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 - (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 + (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) + dtheta2*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta2*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - L3*g*mR*sin(theta1 + theta2 + theta3) - L3*dtheta1*dxW*mR*sin(theta1 + theta2 + theta3)];

        %Calculate initial torques
        X_curr = X_curr - X_ref;
        tau_error = -K*X_curr;

        % Ensure we normalize properly around linearization 
        tau_des = tau_error + tau_ref_10;

        % Actuator torque bound check
        tau_max = zeros(3,1);
        tau_min = zeros(3,1);
        omega_out = zeros(3,1);

        [tau_max, tau_min, omega_out,actuatorFlag] = checkTorque(dq,tau_des);
        dtheta1 = omega_out(1);
        dtheta2 = omega_out(2);
        dtheta3 = omega_out(3);

        % GRF > 0 check
        grfFlag = checkGRF(p,q,dq,tau_des);

        if (grfFlag == true) && (all(actuatorFlag))
            tau = tau_des;
        else
            % Quadprog
            fprintf('Quadprog required');
            JvR = fnc_JvR(q,[L1,L2,L3]);%Wheel to robot Jacobian
            JvR_reduced = [JvR(1,2:4);JvR(3,2:4)];
            JvR_inv = pinv(-JvR_reduced');
            JvR_inv = JvR_inv(2,:);

            H = 2*(p.Ru);
            f = -tau_ref_10' * (p.Ru);
            A = JvR_inv;
            b = 0;
            Aeq = [];
            beq = [];
            lb = tau_min
            ub = tau_max
            x0 = tau_des;
            options = optimset('Display', 'off');
            tau = quadprog(H,f,A,b,Aeq,beq,lb,ub)
        end 
        % Solving for accelerations and adding damping
        tau = [tau(1)/R; -tau(1); -tau(2); -tau(3)];
        u = 0.5*[dxW; dtheta1; dtheta2; dtheta3] + tau;
        ddq = M\(u - C);
        
        % External forces calc
        Acmm = fnc_Acmm(q,dq,Mass,L);
        dAcmm = fnc_dAcmm(q,dq,Mass,L);

        % Acmm(q) * ddq + dAcmm * dq = [pl;pr]
        Fext = Acmm*ddq + dAcmm*dq - [0;0;(mR*g)];
        GRFz = Fext(3);
                
        DDQ_LOG(i,:) = ddq';
        TAU_LOG(i,:) = -tau(2:4);
        GRFz_LOG(i,:) = -GRFz;

    end
end 