function dX = SimpleSegway(t,X,p,Ru)

% Global variables
global K enableSaturation 

% Local variables
g = p.g;
mW = p.valM.mW;
mCM1 = p.valM.cm1;
mCM2 = p.valM.cm2;
mR = p.valM.mR;
L1 = p.valL.L1; 
L2 = p.valL.L2;
L3 = p.valL.L3;
R = p.R;
IW = p.IW; %
IK = p.IK;
IH = p.IH;
IR = p.IR;
theta1_num = p.theta1_num;
theta2_num = p.theta2_num;
theta3_num = p.theta3_num;

% States expanded 
xW = X(1); 
theta1 = X(2); 
theta2 = X(3);
theta3 = X(4);
dxW = X(5); 
dtheta1 = X(6); 
dtheta2 = X(7);
dtheta3 = X(8);

q = [xW;theta1;theta2;theta3];
dq = [dxW;dtheta1;dtheta2;dtheta3];

% Time indicator
t

% Set reference vectors
X_ref = [0;theta1_num;theta2_num;theta3_num;0;0;0;0]; % Theta1 given. Found theta2 via COM calculations for stable point.
tau_ref_10 = [0; -5.13599; -2.74328];

% Mass and Coriolis+Gravity Matrices 
M = [[                                                                                                                             mCM1 + mCM2 + mR + mW + 3/(4000*R^2),                                                                                                                                                                                                                                                                                                                mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) + mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + (L1*mCM1*cos(theta1))/2,                                                                                                                                                                                                                                                                                                                                                                              mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + (L2*mCM2*cos(theta1 + theta2))/2,                                                                                                                                                                                                                L3*mR*cos(theta1 + theta2 + theta3)]
[ mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) + mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + (L1*mCM1*cos(theta1))/2,                                                                                                                mR*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3))^2 + mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))^2 + mCM2*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1))^2 + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))^2 + (L1^2*mCM1*cos(theta1)^2)/4 + (L1^2*mCM1*sin(theta1)^2)/4 + 2683/12500, mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L2*mCM2*cos(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 + 10107/50000, L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000]
[                                                               mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + (L2*mCM2*cos(theta1 + theta2))/2, mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L2*mCM2*cos(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 + 10107/50000,                                                                                                                                                                                                                                               mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))^2 + mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))^2 + (L2^2*mCM2*cos(theta1 + theta2)^2)/4 + (L2^2*mCM2*sin(theta1 + theta2)^2)/4 + 10107/50000,                                   L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000]
[                                                                                                                              L3*mR*cos(theta1 + theta2 + theta3),                                                                                                                                                                                                                              L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000,                                                                                                                                                                                                                                                                L3*mR*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + 4933/25000,                                                                                                                                                     mR*L3^2*cos(theta1 + theta2 + theta3)^2 + mR*L3^2*sin(theta1 + theta2 + theta3)^2 + 4933/25000]];

dtheta3*(L3*dtheta1*mR*sin(theta1 + theta2 + theta3) + L3*dtheta2*mR*sin(theta1 + theta2 + theta3) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3)) - dtheta1*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L1*mCM1*sin(theta1))/4) + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3)) - dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + L3*dtheta3*mR*sin(theta1 + theta2 + theta3))
             dxW*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) - dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta2*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) - dtheta2*((dtheta1*(2*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) - L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))))/2 + dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2) + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + dtheta2*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/4 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/4) + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 - (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 + (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2)) - dtheta1*((dxW*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2 + (L1*mCM1*sin(theta1))/4)) - g*mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - g*mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (dtheta1*dxW*(mR*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + mCM2*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)) + (L1*mCM1*sin(theta1))/2))/2 + (dtheta2*dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 - (L1*g*mCM1*sin(theta1))/2 + (L3*dtheta3*dxW*mR*sin(theta1 + theta2 + theta3))/2
 dtheta3*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + dtheta1*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/4 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/4) + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4)) + dxW*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) + dtheta1*((dtheta1*(2*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)) - L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1))))/2 + (dtheta2*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2) + dtheta2*((dtheta1*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - mR*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3))*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2)*((L2*cos(theta1 + theta2))/2 + L1*cos(theta1)))/2 - (L2*mCM2*cos(theta1 + theta2)*((L2*sin(theta1 + theta2))/2 + L1*sin(theta1)))/2))/2 + (dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2) - dtheta1*((dxW*(mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) + (L2*mCM2*sin(theta1 + theta2))/2))/2 + dxW*((mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2 + (L2*mCM2*sin(theta1 + theta2))/4)) - dtheta3*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 + (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))) + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta2*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta3*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) - g*mR*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)) - (L2*g*mCM2*sin(theta1 + theta2))/2
dtheta1*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta2*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + (dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) + dxW*((L3*dtheta1*mR*sin(theta1 + theta2 + theta3))/2 + (L3*dtheta2*mR*sin(theta1 + theta2 + theta3))/2 + (L3*dtheta3*mR*sin(theta1 + theta2 + theta3))/2) + dtheta3*((dtheta2*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - dtheta2*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) - L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) + L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + dtheta1*((L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)))/2 - (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)))/2 - (L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)))/2 + (L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3)))/2) + L3*dxW*mR*sin(theta1 + theta2 + theta3)) + dtheta2*((dtheta1*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L1*sin(theta1) + L3*sin(theta1 + theta2 + theta3)) + L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta3*(L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (dtheta2*(2*L3*mR*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L3*cos(theta1 + theta2 + theta3)) - 2*L3*mR*cos(theta1 + theta2 + theta3)*(L2*sin(theta1 + theta2) + L3*sin(theta1 + theta2 + theta3))))/2 + (L3*dxW*mR*sin(theta1 + theta2 + theta3))/2) - L3*g*mR*sin(theta1 + theta2 + theta3) - L3*dtheta1*dxW*mR*sin(theta1 + theta2 + theta3)];

% Calculating conditioning of matrix
% [eigVec, eigVal] = eig(M);
% eigVal_ar = diag(eigVal);
% cond = max(eigVal_ar)/min(eigVal_ar);

%Calculate initial torques
X = X - X_ref;
tau_error = -K*X;

% Ensure we normalize properly around linearization 
tau_des = tau_error + tau_ref_10;

% Actuator torque bound check
tau_max = zeros(3,1);
tau_min = zeros(3,1);
omega_out = zeros(3,1);

[tau_max, tau_min, omega_out, actuatorFlag] = checkTorque(dq,tau_des);
%dtheta1 = omega_out(1);
%dtheta2 = omega_out(2);
%dtheta3 = omega_out(3);

% GRFz > 0 check
grfFlag = checkGRF(p,q,dq,tau_des);

if (grfFlag == true) && (all(actuatorFlag))
    tau = tau_des;
else
    % Quadprog
    fprintf('Quadprog required');
    JvR = fnc_JvR(q,[L1,L2,L3]);%Wheel to robot Jacobian
    %These next to steps subs xW = theta * R and recreeate the matrix
    JvR_reduced = JvR(:,2:4); 
    JvR_reduced(1,1) = JvR_reduced(1,1) + p.R;
    JvR_inv = pinv(-JvR_reduced');    
    %Only look at GRFz
    JvR_inv(1,:) = [0;0;0];
    JvR_inv(2,:) = [0;0;0];


    H = 2*(p.Ru);
    f = -tau_ref_10' * (p.Ru);
    A = JvR_inv;
    b = [0;0;0];
    Aeq = [];
    beq = [];
    lb = tau_min
    ub = tau_max
    %x0 = tau_des;
    %options = optimset('Display', 'off');
    tau_error = quadprog(H,f,A,b,Aeq,beq,lb,ub);
    tau = tau_error + tau_ref_10
end 
% Solving for accelerations and adding damping
tau = [tau(1)/R; -tau(1); -tau(2); -tau(3)];
u = 0.5*[dxW; dtheta1; dtheta2; dtheta3] + tau;
ddq = M\(u - C);

dX = [[dxW; dtheta1; dtheta2; dtheta3]; [ddq(1); ddq(2); ddq(3); ddq(4)]];

end